
#ifndef __OSSMH__
#define __OSSMH__

// to trick the IBM resource editor, we need to define IBM when this file is included, JLM 12/9/99
#ifndef MAC
#ifndef IBM // JLM 3/25/09
	#define IBM
#endif
#endif
/////////////////////////////////////////////////
//#define NO_GUI	// for TAP - move to a separate make file
//#define GUI_GNOME	// turn this on to test new grid current and wind mover structure

#include "CLASSES.h"


#define USERCANCEL 555 // JLM 7/8/98
#define FIRSTYEARINPOPUP 1998  // JLM 12/15/98
#define FIRSTYEARINPOPUP_EXTENDED 1980  // JLM 10/18/00
Boolean UseExtendedYears(void);
short FirstYearInPopup(void);
#define LASTYEARINPOPUP 2020 // JLM 8/2/99

//#define BASIC_WINDOW_TITLE_STR "General NOAA Oil Modeling Environment"
#define BASIC_WINDOW_TITLE_STR "General NOAA Operational Modeling Environment"
#define APPL_SIG 'COSM'
#define ABBREVIATED_WINDOW_TITLE_STR "GNOME"

#define HELPFILENAME "GNOME.HLP"
//#define HELPFILENAME "GNOME.CHM"	// for html help
char* HelpFileName(char* helpPath);

#define MENURESOURCENAME "OSSM"
#define CLASSNAME "GNOME"

extern Boolean gNoaaVersion;
extern Boolean gMearnsVersion;
extern Boolean gDispersedOilVersion;
extern Boolean gSavingOrPrintingPictFile;

extern Boolean gSaveMossFiles;
extern char gMossPath[256];

extern Boolean sharedPrinting;
extern short aX, bX, aY, bY;
extern long AX, BX, AY, BY, DX, DY;
extern WorldRect sharedView;
extern Rect		 gRect;

extern PixMapHandle screenImage;
extern Rect screenImageRect; // JLM, holds rect image was made with
extern Rect mapImageRect;	 // STH, holds rect map-image was made with
Boolean RestoreScreenImage();

#ifdef MAC
	Boolean SaveScreenImage(MyGWorldRec frameGWRec);
	Boolean SaveScreenImageFromGWorld (CGrafPtr mapGWorld);
	
	Boolean MakeScreenImageFromGWorld(CGrafPtr sourceGWorld);
	Boolean CopyScreenImageToGWorld(CGrafPtr destGWorld);
#endif

#ifdef MAC
	BitMap GetBlackAndWhiteBitmap(void (*drawProc)(void * object,WorldRect wRect,Rect drawRect), void * object,WorldRect wRect,Rect bitMapRect,OSErr * err);
	#define GetColorImageDIB GetColorImage
	#define GetColorImageBitmap GetColorImage
	CGrafPtr GetColorImage(void (*drawProc)(void * object,WorldRect wRect,Rect drawRect), void * object,WorldRect view,Rect bitMapRect,OSErr * err);
	#define DrawDIBImage DrawBitmapImage
	void DrawBitmapImage(short colorIndex, BitMap * bitmap,Rect m);
#else
	HDIB GetBlackAndWhiteBitmap(void (*drawProc)(void * object,WorldRect wRect,Rect drawRect), void * object,WorldRect wRect,Rect bitMapRect,OSErr * err);
	HDIB GetColorImageDIB(void (*drawProc)(void * object,WorldRect wRect,Rect drawRect), void * object,WorldRect view,Rect bitMapRect,OSErr * err);
	HBITMAP GetColorImageBitmap(void (*drawProc)(void * object,WorldRect wRect,Rect drawRect), void * object,WorldRect view,Rect bitMapRect,OSErr * err);
	void DrawDIBImage(short colorIndex, HDIB *hBitmapPtr,Rect m);
	void DrawBitmapImage(short colorIndex, HBITMAP *hBitmapPtr,Rect m);
#endif

////////////////////////////////////////////////////////////////// TYPES
 #ifdef MAC
	#define PLATFORM  ((long)'MAC ')
#else
	#define PLATFORM  ((long)'WIN ')
#endif

	#define SETTINGS_VERSION  ((float)1.0)
	#define GNOME_VERSION_STR  "1.3.8"
	

typedef struct {
	
	// these fields are permanent (saved and restored)
	long platform; //'WIN ' or 'MAC '
	float settingsVersion;
	
	WorldRect currentView;
	long listWidth;
	//			long textMode; // SCREENMODE or PRINTMODE
	long screenMode; // COLORMODE, GRAYSCALEMODE, or BANDWMODE
	long printMode; // COLORMODE, GRAYSCALEMODE, or BANDWMODE
	long pictureSize; // WINDOWSIZE or PAGESIZE
	long massUnits;
	long areaUnits;
	long distanceUnits;
	long backgroundColor;
	long showLatLongLines;
	long llPosition;
	long latLongFormat;
	long showIntermediateLines;
	long customGrid;
	long longLineSpace;
	long longLineUnits;
	long longLabelSpace;
	long longLabelUnits;
	long latLineSpace;
	long latLineUnits;
	long latLabelSpace;
	long latLabelUnits;
	long preferencesScreen;
	//			long settingsScreen;
	char headerSPILLID[128];
	char headerFROM[128];
	char headerCONTACT[128];
	char caveat[5][128];
	long daylightSavingsTimeFlag;	// use one of the reserved spots for dst flag 3/21/06
	long omitFooter;
	//long reserved[20];
	//long reserved[19];
	long reserved[18];
	
	// the remaining fields are temporary (saved but reset on startup)
	long currentTool;
	long inBackground;
	long colorQDAvailable;
	long undoCode;
	long doNotPrintError; // to allow only one error message per user action
	long quitting;
	long modelStartMode;
	long sprayCanSize;
	
} Settings;

// According to the manual this directive should be embedded 
// inside the structure definition, so may not do anything here:

#ifdef MAC
#pragma options align=mac68k
#endif

//--

// JLM 1/25/99
// Bushy says the LE times are based off of hours since 
// a reference time which is basically Midnight Jan of the previous "leap year".
// He says it is actually the previous year which is divisible by 4.
// The currTime field in the header can be compared to date held in currDay, currYear etc
// to identify any unusual cases where the reference year is different.
// (Such cases have come up in the long multiyear runs)

typedef struct {
		char		name [10];
		short		currDay;//[1-31]
		short		currMonth;
		short		currYear; // 2 digit
		short		currHour;//[0,23]
		short		currMin;//[0,59]
		// JLM renamed the standard OSSM field names to make them clearer
		//float		currTime;	// frame time in decimal-hours since from reference time 
		float		currTimeInHrsAfterOssmRefTime;	// frame time in decimal-hours since from reference time 
		float		version;// should be greater than 0
		long		numRecords;
	} LEHeaderRec;

typedef struct {
		float		pLat;
		float		pLong;
		// JLM renamed the standard OSSM field names to make them clearer
		//float		releaseTime; // hours after reference year  i.e. year divisible from year.
		float		releaseTimeInHrsAfterRefTime; // hours after reference year  i.e. year divisible from year.
		//float		age; // Note: this is the age when LE was released, not current age
		float		ageWhenReleasedInHrsAfterReleaseTime; // Note: this is the age when LE was released, not current age
		float		beachHeight;
		long		nMap;
		long		pollutant;
		long		windKey;
	} LEPropRec, *LEPropP, **LEPropH;

#ifdef MAC
#pragma options align=reset
#endif

////////////////////////////////////////////////////////////// RESOURCE CONSTANTS



#define MAPWINDOW 1000



#define APPLEMENU 200

#define FILEMENU 300

#define EDITMENU 400

#define ITEMMENU 500

#define SHARINGMENU 600

#define HELPMENU 700

#define RUNMENU 800

#define CDOGMENU 900

#define ANALYSISMENU 950


#define APPLEABOUTTATITEM 201



#define OPENITEM 301

#define CLOSEITEM 303

#define SAVEASITEM 304

#define PRINTSETUPITEM 306

#define PRINTITEM 307

#define PREFERENCESITEM 309

#define QUITITEM 311



#define UNDOITEM 401

#define CUTITEM 403

#define COPYITEM 404

#define PASTEITEM 405



#define WIZARDITEM 501

#define ADDITEM 503

#define SETTINGSITEM 504

#define DELETEITEM 505

#define UPITEM 507

#define DOWNITEM 508


#define ABOUTSHARINGITEM 601


#define HELPCONTENTSITEM 701

#define HELPSEARCHITEM 702

#define HELPHELPITEM 703

#define ABOUTTATITEM 705


#define RUNITEM 801

#define STEPITEM 802

#define RUNTILLITEM 803

#define RESETITEM 805

#define MODELSETTINGSITEM 903

#define SETMAPBOXITEM 904

#define CDOGSETTINGSITEM 905

#define EXPORTCDOGFILESITEM 906

#define RUNCDOGITEM 907

#define INPUTCDOGFILESITEM 908

#define CDOGSEPARATORITEM 902

#define ABOUTCDOGITEM 901



#define SHOWGRIDITEM 951

#define SHOWSELECTEDTRIITEM 952

#define DESELECTITEM 953

#define SHOWMAXTRIITEM 954

#define DISPERSEOILITEM 955

#define SETCONTOURSITEM	956

#define CONCATPTITEM 957

#define CONCATPLUMEITEM 958

#define SHOWPLOTSITEM 959

#define SEPARATIONLINE 960

#define DEPTHCONTOURSITEM 961

#define SHOWCONTOURSITEM 962

#define SHOWCONTOURLABELSITEM 963

#define SCALEDEPTHSITEM	964

#define SEPARATIONLINE2 965

#define SMOOTHINGPARAMETERSITEM 966

#define SEPARATIONLINE3 967

#define CALCDOSAGEITEM 968

#define SHOWDOSAGEITEM 969

#define SEPARATIONLINE4 970

#define SUPPRESSDRAWINGITEM 971

#define SETSELECTEDBEACH 973
#define CLEARSELECTEDBEACH 974
#define CONCENTRATIONONBEACH 975

#define NUMICONPICTS 7



#define LEGENDPICT 300



#define CLOSEDLEPICT 400

#define OPENLEPICT 401

#define SPLITBARPICT 402

#define EMPTYBOXPICT 403

#define FILLEDBOXPICT 404



#define pFILETYPES 150

#define pNOVICESAVEFILETYPES 151
#define pINTERMEDIATESAVEFILETYPES 152
#define pADVANCEDSAVEFILETYPES 153
#define pDISPERSEDOILSAVEFILETYPES 154

#define pMASSUNITS 160

#define pAREAUNITS 161

#define pBACKGROUNDCOLORS 167

#define pLONGLINEUNITS 170

#define pLONGLABELUNITS 171

#define pLATLINEUNITS 172

#define pLATLABELUNITS 173



#define TOOLPICTBASE 1000

#define SELECTEDTOOLPICTBASE 2000

#define DEPRESSEDTOOLPICTBASE 3000

#define BUTTONPICTBASE 1100

#define PLAYERPICTBASE 1500

#define DISABLEDPLAYERPICTBASE 1600

#define DISABLEDBUTTONPICTBASE 1200

#define DEPRESSEDBUTTONPICTBASE 3100

#define DEPRESSEDPLAYERPICTBASE 3500

#define PAUSEPICTOFFSET 10



#define PREFERENCESPICTBASE 4001

#define SETTINGSPICTBASE 4101



#define STRETCHLISTCURSOR 2000



#define UNITSTRINGS 200



#define PATTERNS 2000



#define BLUEPPAT 128

#define REDPPAT 129

#define HILITEPAT 130



#define HORIZANTS 1000

#define VERTANTS 1001



// POPUP MENUS



#define pDURATIONDAYS 159

#define pLEMASSUNITS 162

#define pNORTHSOUTH1 163

#define pEASTWEST1 164

#define pNORTHSOUTH2 165

#define pEASTWEST2 166

#define pPOLLUTANTS 168
#define pPOLLUTANTS2 229	// with chemicals

#define	pSPEEDUNITS 174

#define	pSPEEDUNITS2 180			// two speed-units menus in component mover dialog, STH

#define pMOVERTYPES 169				// mover types menu

#define pMAPTYPES	 181			// map types menu

#define pNOVICELETYPES	 182			// LE types menu (not pollutant types)
#define pINTERMEDIATELETYPES	 184			// LE types menu (not pollutant types)
#define pADVANCEDLETYPES	 185			// LE types menu (not pollutant types)
#define pADVANCEDLETYPES2	 228			// LE types menu (not pollutant types) without CDOG
#define pTIMEAMOUNTTYPES	186			// Overflight menu info 

#define pMOVERTYPES2 183			// mover types that can be selected in dialog M20 (component mover), STH
#define pSCALEBYTYPES	187			// wind speed or wind stress (in dialog M20)

#define	pDIRECTIONS	175				// wind directions menu

#define pYEARS		177
#define pYEARS2		179
#define pYEARS_EXTENDED		188
#define pYEARS2_EXTENDED	189

#define pTIMEFILETYPES	190
#define pDISPERSANTMODE	191
#define pHYDROLOGYINFO	192
#define pTRANSPORTUNITS	193
#define pPERSISTENCE		194

#define pHYDPROCESS		210
#define pEQCURVES			211
#define pSEPFROMPLUME	212
#define pTEMPSAL		213
#define pDROPLET		214
#define pDISCHARGERATE		215
#define pHYDRODYNAMICOPTIONS		216
#define pANGLEUNITS		195
#define pTIMEZONES		196
#define pDISCHARGETYPE		217
#define pCIRCULATIONINFO		218
#define pYESNO		219
#define pDIAMETERUNITS		220
#define pTEMPUNITS		221
#define pDENSITYUNITS		222
#define pGOR		223
#define pOILDISCHARGE		224
#define pGASDISCHARGE		225
#define pDEPTHUNITS2		226
#define pMOLWT		227
#define pMONTHS		176
#define pMONTHS2	178

// code goes here, need to change numbers for GNOMEDO items
#define pRANDOMINPUTTYPE	197
#define pDISPTIMETYPE	198
#define pWAVEHEIGHT	199
#define pMIXEDLAYERDEPTH	201
#define pWATERDENSITY	202
#define pDIAGNOSTICSTRTYPE	205
#define pLEVELOFCONCERN	206
#define pSPECIES		207
#define pCHECKBOXTYPE	208
#define pWAVEHTINPUT		209

#define pDEPTHUNITS	203
#define pHEIGHTUNITS	204

////////////////////////////////////////////////////////////////// CALCULATION CONSTANTS



////////////////////////////////////////////////////////////////// CONSTANTS



enum { SPRAY_SIZE_SMALL, SPRAY_SIZE_MEDIUM, SPRAY_SIZE_LARGE };	 // spray-can setting


enum { MASSONLY = 1, AREAONLY, MASSPERAREA }; 	// unit formats


enum { ATTIMEOFSPILL = 1, ATOVERFLIGHTTIME };  


#define EAST 	"E"
#define ENE 	"ENE"
#define ESE 	"ESE"
#define NORTH 	"N"
#define NE 		"NE"
#define NW 		"NW"
#define NNE 	"NNE"
#define NNW 	"NNW"
#define SOUTH 	"S"
#define SE 		"SE"
#define SW 		"SW"
#define SSE 	"SSE"
#define SSW 	"SSW"
#define WEST 	"W"
#define WNW 	"WNW"
#define WSW 	"WSW"


enum { SQUAREMILES = 1, SQUARENAUTICALMILES,

	   SQUAREKILOMETERS, ACRES, SQUAREMETERS };	// area units



enum { FV_UPPERLEFT = 3, FV_SAMESCALE };		// forceAspect options



enum { LL_BELOW = 1, LL_ABOVE };				// lat/long grid positions



enum { MD_AVERAGE = 1, MD_CHOP }; 				// max density methods



enum { BACKWHITE = 1, BACKBLACK, BACKGRAY, BACKBLUE, BACKGREEN };



enum { POLYGON = 0, POLYLINE }; // polygon types



enum { DRAWSOLID = 0, DRAWPATTERN }; // fill options



enum { INITPOLYACCUMULATION = 0, ACCUMULATEPOLYGON, DRAWACCUMULATEDPOLYGONS,

	   DRAWONEPOLYGON }; // polygon draw operations



enum { PICTMAP = 1, BNAMAP, OSSMMAP,

	   FORECASTLE, UNCERTAINTYLE, EXTENDEDLE, STATISTICALLE, TATFILE }; // file types


enum { FT_LOCATIONSAVEFILE = 101, FT_ADVANCEDSAVEFILE, FT_MOVIEFILE, FT_MOSSSAVEFILE,FT_MOSSSAVEFILESERIES,  

		FT_TATSAVEFILE,FT_TATSAVEFILESERIES, FT_NETCDFLEFILESNAPSHOT, FT_NETCDFLEFILE, FT_TAPLEFILE, FT_BITMAPSAVEFILE, FT_PICTSAVEFILE, FT_SAVEBNAMAP, FT_SAVEWIND, FT_SAVETOPOLOGY, FT_OUTPUTCONC, FT_BUDGETTABLE, FT_PICTSAVEFILESERIES  }; // save file types


enum { TATSAVEFILE = 101, MOSSSAVEFILE, MOVIE, BITMAPSAVEFILE, PICTSAVEFILE }; // save file types



enum { OPENBUTTON = 0, SAVEBUTTON, ADDBUTTON, SETTINGSBUTTON, DELETEBUTTON, UPBUTTON, DOWNBUTTON };


//enum { RESETBUTTON = 7, PLAYBUTTON, PAUSEBUTTON = 8, STEPBUTTON };
enum { RESETBUTTON = 8, PLAYBUTTON, PAUSEBUTTON = 9, STEPBUTTON };


enum { SCREENMODE = 0, PRINTMODE }; // text modes

enum { COLORMODE = 0, GRAYSCALEMODE, BANDWMODE }; // color modes

enum { PAGESIZE = 0, WINDOWSIZE }; // save as picture modes

enum { DEGREES = 0, DEGMIN, MINUTES = 1, DMS, SECONDS = 2 }; // lat/long format

enum { RATIO = 0, EQUALITY, WINDOWWIDTH }; // scale formats

enum { FROMCENTER = 0, FROMCORNER }; // selection preferences

enum { HORIZONTAL = 0, VERTICAL }; // orientations

enum { UNDO_NOTHING = 0, UNDO_DELETE, UNDO_DRAG, UNDO_STRETCH, UNDO_NEW }; // undo codes



//#define MOST_ZOOMED_IN_SCALE 500
#define MOST_ZOOMED_IN_SCALE 2000	
#define MINWRECTDIST 1000
#ifdef MAC
#define MOST_ZOOMED_OUT_SCALE 196608000	// Mac pixels per screen is 72, PC is 96
#else
#define MOST_ZOOMED_OUT_SCALE 262144000
#endif
#define MAXWRECTDIST 1000000000
#define OVERLAPFRACTION  0.33


#define CLOSEDHAND 3000
//enum { ARROWTOOL = 0, ZOOMPLUSTOOL, ZOOMMINUSTOOL, HANDTOOL, SPILLTOOL, SPRAYCANTOOL, ERASETOOL, RULERTOOL };
enum { ARROWTOOL = 0, ZOOMPLUSTOOL, ZOOMMINUSTOOL, HANDTOOL, SPILLTOOL, SPRAYCANTOOL, ERASETOOL, RULERTOOL, LASSOTOOL, SHORTSELTOOL };

//#define NUMTOOLS 8
extern long NUMTOOLS;
extern short tools[12];
short  ButtonGroupWidth(void);

#ifdef MAC

	#define TOOLBARHEIGHT 40
	#define TOOLSIDE 29
	#define TOOLSPACE 3
	#define SPLITBARWIDTH 8
	#define PLAYERSIDE 22
	#define UPDOWNWIDTH 20
	#define UPDOWNHEIGHT 14
	#define UPDOWNSPACE 1
	#define MINTIMELINELENGTH 100
	#define MESSAGEHEIGHT 15
	#define RIGHTBARWIDTH 15
	#define TITLEBARHEIGHT 18
	#define TEXTBETWEENLINES 4
	#define OBJECTLINEOFFSET 0

#else

	#define TOOLBARHEIGHT 40
	#define TOOLSIDE 31
	#define TOOLSPACE 5
	#define SPLITBARWIDTH 5
	#define PLAYERSIDE 21
	#define UPDOWNWIDTH 20
	#define UPDOWNHEIGHT 14
	#define UPDOWNSPACE 3
	#define MINTIMELINELENGTH 90
	#define MESSAGEHEIGHT 20
	#define RIGHTBARWIDTH 0
	#define TITLEBARHEIGHT 30
	#define TEXTBETWEENLINES 8
	#define OBJECTLINEOFFSET 0

#endif

#define MINIMUM_WINDOW_HEIGHT (TITLEBARHEIGHT+ 2*TOOLBARHEIGHT+ MESSAGEHEIGHT)

short TimeLineLength(void); // use this not TIMELINELENGTH !!!


////////////////////////////////////////////////////////////////// DIALOGS
#define CUR_UNCERTAINTY_DLGID 1650
enum{CU_OK=1,CU_HILITE,CU_CANCEL,CU_HELP,CU_DURATION,CU_EDDYDIFFUSION,CU_DOWNCUR,CU_UPCUR,CU_LEFTCUR,CU_RIGHTCUR,
	CU_EDDYDIFFUSIONLABEL=12,CU_EDDYDIFFUSIONUNITS=16,CU_STARTTIME=26,CU_EDDYV0LABEL=28,CU_EDDYV0,CU_EDDYV0UNITS};

#define M10 1000

enum {	M10OK = 1, M10HILITEDEFAULT, M10CANCEL, M10HELP,

		M10STARTMONTH =6 , M10STARTDAY, M10STARTYEAR, M10STARTHOURS ,M10STARTMINUTES,

		M10DURATIONDAYS =14, M10DURATIONHOURS=16, M10UNCERTAIN = 19,
	   
		M10COMPUTELABEL = 20, M10COMPUTESTEP, M10COMPUTEHOURLABEL,
		
		M10PREVENTLANDJUMPING,M10FROST,M10FROSTLABEL,M10SHOWCURRENTS,M10HINDCAST};

#define M10b 1010

enum {	M10bOK = 1, M10bHILITEDEFAULT, M10bCANCEL, M10bHELP,

		M10bSTARTMONTH =6, M10bSTARTDAY, M10bSTARTYEAR, M10bSTARTHOURS ,M10bSTARTMINUTES,

		M10bENDMONTH =14, M10bENDDAY, M10bENDYEAR, M10bENDHOURS, M10bENDMINUTES, M10bUNCERTAIN = 22,
	   
		M10bCOMPUTELABEL = 23, M10bCOMPUTESTEP, M10bCOMPUTEHOURLABEL,
		
		M10bPREVENTLANDJUMPING,M10bFROST,M10bFROSTLABEL,M10bSHOWCURRENTS,M10bHINDCAST};

#define RUNUNTIL 1050

enum {	RU_OK = 1, RU_HILITEDEFAULT, RU_CANCEL,

		RU_MONTH, RU_DAY, RU_YEAR, 
		
		RU_HOURS, RU_MINUTES,

		RU_CURRENTMODELTIME, RU_MODELENDTIME };

#define SELECTUNITS 1060

enum {	SU_OK = 1, SU_HILITEDEFAULT, SU_CANCEL, SU_UNITS };



#define M12 1200

enum { M12CREATE = 1, M12HILITEDEFAULT, M12LOAD, M12CANCEL, M12TYPESITEM, M12HELP = 8 };



#define M13 1300

enum { M13OK = 1, M13HILITEDEFAULT, M13CANCEL, M13HELP,

	   M13NUMLES, M13MASS, M13MASSUNITS, M13DEPTH, M13BOTTOMSPILL,

	   M13POLLUTANT, M13DENSITY, M13DENSITYUNITS,

	   M13STARTMONTH, M13STARTDAY, M13STARTYEAR, M13STARTHOURS, M13STARTMINUTES,

	   M13SLATLABEL, M13SLATDEGREES, M13SLATDEGLABEL, M13SLATDEG,

	   M13SLATMINLABEL, M13SLATMINUTES, M13SLATMIN, M13SLATSECLABEL, M13SLATSECONDS, M13SLATDIR,

	   M13SLONGLABEL, M13SLONGDEGREES, M13SLONGDEGLABEL, M13SLONGDEG,

	   M13SLONGMINLABEL, M13SLONGMINUTES, M13SLONGMIN, M13SLONGSECLABEL, M13SLONGSECONDS, M13SLONGDIR,

	   M13ENDMONTH, M13ENDDAY, M13ENDYEAR, M13ENDHOURS, M13ENDMINUTES,

	   M13ELATLABEL, M13ELATDEGREES, M13ELATDEGLABEL, M13ELATDEG,

	   M13ELATMINLABEL, M13ELATMINUTES, M13ELATMIN, M13ELATSECLABEL, M13ELATSECONDS, M13ELATDIR,

	   M13ELONGLABEL, M13ELONGDEGREES, M13ELONGDEGLABEL, M13ELONGDEG,

	   M13ELONGMINLABEL, M13ELONGMINUTES, M13ELONGMIN, M13ELONGSECLABEL, M13ELONGSECONDS, M13ELONGDIR,

	   M13DEGREES, M13DEGMIN, M13DMS,

	   M13FROST1, M13FROST2,
	   
	   M13ENDTIMECOLON = 69,

	   M13DEPTHLABEL = 76, M13LELABEL = 70, M13MASSLABEL =71, M13DENSITYLABEL = 73,
	   
	   M13FROST3 = 79, M13WANTENDTIME = 75, M13ENDTIMELABEL = 78, M13WANTENDPOSITION = 80,
		
		M13AGELABEL, M13AGE, M13AGEUNITS, M13DISPERSANT, M13WINDAGE, M13DEPTHUNITS, M13CHEMPARAMS,
		
		M13SPILLNAMELABEL, M13SPILLNAME };


#define DISPERSION_DLGID 1350
enum { DISP_OK = 1, DISP_HILITE, DISP_CANCEL, DISP_HELP,

	   DISP_STARTTIMEPOPUP, DISP_STARTTIME, DISP_STARTTIMEUNITS, 
	   
	   DISP_AMOUNTLABEL, DISP_AMOUNT, DISP_PERCENT, 

	   DISP_APILABEL, DISP_API, DISP_APIUNITS, 
	   /*DISP_DEPTHLABEL, DISP_DEPTH, DISP_DEPTHUNITS, */
	   
		DISP_REGION,
		
	   DISPTOPLATLABEL=15, DISPTOPLATDEGREES, DISPTOPLATDEGLABEL, DISPTOPLATDEG,

	   DISPTOPLATMINLABEL, DISPTOPLATMINUTES, DISPTOPLATMIN, DISPTOPLATSECLABEL, DISPTOPLATSECONDS, DISPTOPLATDIR,

	   DISPLEFTLONGLABEL, DISPLEFTLONGDEGREES, DISPLEFTLONGDEGLABEL, DISPLEFTLONGDEG,

	   DISPLEFTLONGMINLABEL, DISPLEFTLONGMINUTES, DISPLEFTLONGMIN, DISPLEFTLONGSECLABEL, DISPLEFTLONGSECONDS, DISPLEFTLONGDIR,

	   DISPBOTTOMLATLABEL, DISPBOTTOMLATDEGREES, DISPBOTTOMLATDEGLABEL, DISPBOTTOMLATDEG,

	   DISPBOTTOMLATMINLABEL, DISPBOTTOMLATMINUTES, DISPBOTTOMLATMIN, DISPBOTTOMLATSECLABEL, DISPBOTTOMLATSECONDS, DISPBOTTOMLATDIR,

	   DISPRIGHTLONGLABEL, DISPRIGHTLONGDEGREES, DISPRIGHTLONGDEGLABEL, DISPRIGHTLONGDEG,

	   DISPRIGHTLONGMINLABEL, DISPRIGHTLONGMINUTES, DISPRIGHTLONGMIN, DISPRIGHTLONGSECLABEL, DISPRIGHTLONGSECONDS, DISPRIGHTLONGDIR,

	   DISPDEGREES, DISPDEGMIN, DISPDMS,

	   DISP_FROST1, DISP_DURATIONLABEL, DISP_DURATION, DISP_DURATIONUNITS,
		
		DISP_STARTMONTH=62, DISP_STARTDAY, DISP_STARTYEAR, DISP_STARTHOURS, DISP_STARTMINUTES,
		
		DISP_COLON, DISP_TIMELABEL, /*DISP_WAVEHTLABEL, DISP_WAVEHT, DISP_WAVEHTUNITS,*/ DISP_FROST2};


enum { ADIOS_OK = 1, ADIOS_FROST, ADIOS_CANCEL, ADIOS_USERITEM, ADIOS_TIMETITLE, ADIOS_EVAPTITLE, 
		
		ADIOS_DISPTITLE, ADIOS_OILTYPE, ADIOS_OILNAME, ADIOS_APILABEL, ADIOS_API, ADIOS_REMOVEDTITLE };

enum { DROPLET_OK = 1, DROPLET_FROST, DROPLET_CANCEL, DROPLET_USERITEM, DROPLET_PROBABILITYTITLE, DROPLET_SIZETITLE, 
		
		DROPLET_TEXT, DROPLET_IMPORT, DROPLET_DEFAULTS, DROPLET_SAVE };


#define M14 1400

enum { M14OK = 1, M14HILITEDEFAULT, M14CANCEL, M14HELP,

	   M14NAME, M14ACTIVE, M14AREA, M14MAGNITUDELOW, M14MAGNITUDEHIGH,

	   M14ANGLELOW, M14ANGLEHIGH, M14DURATION, M14FROST1, M14FROST2 };


#define M15 1500

enum { M15OK = 1, M15HILITEDEFAULT, M15CANCEL, M15HELP,

	   M15STARTMONTH = 5, M15STARTDAY, M15STARTYEAR, M15STARTHOURS, M15STARTMINUTES,
	   
	   M15POLLUTANT = 13, M15LELABEL, M15NUMLES,
	   
	   M15MASS =17, M15MASSUNITS, M15AMOUNTTIMEPOPUPAT, M15AMOUNTTIMEPOPUP = 20,
	   
	   M15SPILLMONTH = 21, M15SPILLDAY, M15SPILLYEAR, M15SPILLHOURS, M15SPILLMINUTES,

	   M15SPILLTIME24HRLABEL = 26, M15SPILLTIMECOLON,
	   
	   M15RELEASEAGELABEL = 28, M15RELEASEAGEHOURS, M15RELEASEAGEUNITSLABEL,M15RELEASEAGEUNITSEXPLANATION,
	   
	   M15FROST1 =32,  
	   
	   M15FROST2 =34,  M15FROST2LABEL,
		
	   M15DISPERSANT, M15WINDAGE, M15SPILLNAMELABEL, M15SPILLNAME

};


#define M16 1600

enum { M16OK = 1, M16HILITEDEFAULT, M16CANCEL, M16HELP,

	   M16FILENAME, M16ACTIVE, M16SHOWARROWS,

	   M16TIMEFILENAMELABEL, M16TIMEFILENAME,

	   M16NOSCALING, M16SCALETOCONSTANT, M16SCALEVALUE,

	   M16SCALETOGRID, M16SCALEGRIDNAME, 

	   M16LATLABEL, M16LATDEGREES, M16LATDEGLABEL, M16LATDEG,

	   M16LATMINLABEL, M16LATMINUTES, M16LATMIN, M16LATSECLABEL, M16LATSECONDS, M16LATDIR,

	   M16LONGLABEL, M16LONGDEGREES, M16LONGDEGLABEL, M16LONGDEG,

	   M16LONGMINLABEL, M16LONGMINUTES, M16LONGMIN, M16LONGSECLABEL, M16LONGSECONDS, M16LONGDIR,

	   M16DEGREES, M16DEGMIN, M16DMS, M16FROST, M16ARROWSCALE,

	   M16UNSCALEDVALUE,
	   M16SCALETOVALUEUNITS = 45,
	   M16SETUNCERTAINTY=47, 
		M16TIMEFILEUNITSLABEL,
	   M16TIMEFILEUNITS=49,
		M16TIMEFILESCALEFACTORLABEL,
		M16TIMEFILESCALEFACTOR,
		M16HYDROLOGYSCALEFACTORLABEL,
		M16HYDROLOGYSCALEFACTOR,
		M16TIMEFILETYPES,
		M16TRANSPORTLABEL, M16TRANSPORT, M16TRANSPORTUNITS,
		M16VELLABEL,M16VELATREFPT=59,M16VELUNITS,
		M16REPLACEMOVER	
	   };


#define EDIT_WINDS_DLGID 1660

#define ADCPDLG 3150 

enum {  ADCPDLGOK = 1, ADCPDLGHILITEDEFAULT, ADCPDLGCANCEL,ADCPDLGHELP, ADCPDLGDELETEROWS_BTN,
		
		ADCPDLGREPLACE, ADCPNAME, ADCPDLGDELETEALL, ADCPDLGLIST, ADCPNAME_LIST_LABEL, ADCPDLGMOVEUP, ADCPNUMBINS_LIST_LABEL, ADCPBINNUMLABEL, ADCPBINNUM, ADCPTOPBINDEPTH_LIST_LABEL, ADCPTOPBINSIZE_LIST_LABEL, ADCPDEPTH_LIST_LABEL};
		//ADCPDLGREPLACE, ADCPNAME, ADCPDLGDELETEALL, ADCPBINNUM, ADCPNAME_LIST_LABEL, ADCPDLGMOVEUP, ADCPJUNK, ADCPBINNUMLABEL, ADCPDLGLIST};


#define M17 1700

enum { M17OK = 1, M17HILITEDEFAULT, M17CANCEL, M17HELP, M17LIST };


#define SELECTBNAMAP 1750

enum {BNA_OK = 1, BNA_HILITEDEFAULT, BNA_CANCEL, BNA_LIST };

//#define SELECTMAP 1760

//enum {MAP_OK = 1, MAP_HILITEDEFAULT, MAP_CANCEL, MAP_LIST };


#define M18 1800
#define M18b 1825

#define WINDAGE_DLGID 1850

enum { WINDAGE_OK = 1, WINDAGE_HILITEDEFAULT, WINDAGE_CANCEL, WINDAGE_HELP,

		WINDAGE_PERSISTENCE, WINDAGE_A, WINDAGE_B, WINDAGESETTINGSFRAME };




#define M20 2000

enum {  M20OK = 1, M20HILITEDEFAULT, M20CANCEL, M20HELP, M20UNCERTAINTY,
		
		M20PAT1SELECT, M20PAT1NAME, M20PAT1DIR, M20PAT1SPEED, M20PAT1SPEEDUNITS, M20PAT1SCALE,
		
		M20PAT2SELECT, M20PAT2NAME, M20RELWINDDIRLABEL,
		
		M20DIRPLUS90 = 15, M20DIRMINUS90, M20PAT2DIR, M20PAT2SPEED, M20PAT2SPEEDUNITS, M20PAT2SCALE,
				
		M20LATLABEL = 21, M20LATDEGREES, M20LATDEGLABEL, M20LATDEG,

		M20LATMINLABEL, M20LATMINUTES, M20LATMIN, M20LATSECLABEL, M20LATSECONDS, M20LATDIR,

		M2OLONGLABEL, M2OLONGDEGREES, M2OLONGDEGLABEL, M2OLONGDEG,

		M2OLONGMINLABEL, M2OLONGMINUTES, M2OLONGMIN, M2OLONGSECLABEL, M2OLONGSECONDS, M20LONGDIR,

		M20DEGREES, M20DEGMIN, M20DMS,
		
		M20MOVERTYPES = 45, M20MOVERNAME, M20SCALEBYTYPES,

		M20FROST1=48, M20FROST2, M20FROST3, 

		M20EQUALS=57, M20PAT2DIRUNITS, M20PAT2FORWINDSPEED, M20PAT2SCALETO, M20PAT2SCALEUNITS=74,

		M20FROST4 = 63,

		M20UNSCALEDVALUE1 = 66, 

		M20UNSCALEDVAL2LABEL=68, M20UNSCALEDVALUE2 = 69, M20UNSCALEDVAL2UNITS, M20SCALEUSING = 72,
		
		M20USEAVERAGEDWINDS=44, M20SETAVERAGEDWINDSPARAMETERS=61, M20EXTRAPOLATEWINDSCHECKBOX=62};

#define M20b 2050

enum { M20bOK = 1, M20bHILITEDEFAULT, M20bCANCEL, M20bHELP, M20bTIMELABEL, M20bAVERAGEHRS,

		M20bHOURS, M20bSCALEFACTORLABEL, M20bSCALEFACTOR, M20bWINDPOWERLABEL, M20bWINDPOWER, M20bSCALEFACTORCHECKBOX};

#define COMPOUNDDLG 2075 

enum {  COMPOUNDDLGOK = 1, COMPOUNDDLGHILITEDEFAULT, COMPOUNDDLGCANCEL,COMPOUNDDLGHELP, COMPOUNDDLGDELETEROWS_BTN,
		
		COMPOUNDDLGREPLACE, COMPOUNDCURNAME, COMPOUNDDLGDELETEALL, COMPOUNDDLGLIST, COMPOUNDNAME_LIST_LABEL, COMPOUNDDLGMOVEUP};

#define M21 2100

enum { M21CREATE = 1, M21HILITEDEFAULT, M21LOAD, M21CANCEL, M21TYPESITEM };

// values for the popup when choosing a spill type
enum {M21_POINT_LINE_SOURCE = 1, M21_SPRAYED, M21_OSSMFILE, M21_LE_GRID, M21_CDOG};


#define M21b 2150

enum { M21bCREATE = 1, M21bHILITEDEFAULT, M21bLOAD, M21bCANCEL };


#define M22 2200

enum { M22OK = 1, M22HILITEDEFAULT, M22CANCEL, M22HELP, M22TYPESITEM };



#define M23 2300

enum { M23CREATE = 1, M23HILITEDEFAULT, M23LOAD, M23CANCEL, M23TYPESITEM };



#define M24 2400

enum { M24OK = 1, M24HILITEDEFAULT, M24CANCEL, M24WEATHERNAME };



#define M25 2500

enum { M25OK = 1, M25HILITEDEFAULT, M25CANCEL, M25HELP,

	   M25NAMELABEL, M25NAME, 
	   
	   M25REFLOATLABEL, M25REFLOATTIME, M25REFLOATLABEL2, 
	   
		M25WANTEDCHANGEBOUNDS,
		
	   M25TOPLATLABEL, M25TOPLATDEGREES, M25TOPLATDEGLABEL, M25TOPLATDEG,

	   M25TOPLATMINLABEL, M25TOPLATMINUTES, M25TOPLATMIN, M25TOPLATSECLABEL, M25TOPLATSECONDS, M25TOPLATDIR,

	   M25LEFTLONGLABEL, M25LEFTLONGDEGREES, M25LEFTLONGDEGLABEL, M25LEFTLONGDEG,

	   M25LEFTLONGMINLABEL, M25LEFTLONGMINUTES, M25LEFTLONGMIN, M25LEFTLONGSECLABEL, M25LEFTLONGSECONDS, M25LEFTLONGDIR,

	   M25BOTTOMLATLABEL, M25BOTTOMLATDEGREES, M25BOTTOMLATDEGLABEL, M25BOTTOMLATDEG,

	   M25BOTTOMLATMINLABEL, M25BOTTOMLATMINUTES, M25BOTTOMLATMIN, M25BOTTOMLATSECLABEL, M25BOTTOMLATSECONDS, M25BOTTOMLATDIR,

	   M25RIGHTLONGLABEL, M25RIGHTLONGDEGREES, M25RIGHTLONGDEGLABEL, M25RIGHTLONGDEG,

	   M25RIGHTLONGMINLABEL, M25RIGHTLONGMINUTES, M25RIGHTLONGMIN, M25RIGHTLONGSECLABEL, M25RIGHTLONGSECONDS, M25RIGHTLONGDIR,

	   M25DEGREES, M25DEGMIN, M25DMS, M25REPLACEMAP,

	   M25FROST1 };



#define M26 2600

enum { M26OK = 1, M26HILITEDEFAULT, M26CANCEL, M26CHANGE, M26HELP, M26WNAME, M26LIST,

		M26HALFLIFE1, M26HALFLIFE2, M26HALFLIFE3, M26PERCENT1, M26PERCENT2, M26PERCENT3,

		M26POLNAME, M26STANDMOD, M26FROST1, M26FROST2 };


#define M27 2700

enum { M27OK = 1, M27HILITEDEFAULT, M27CANCEL, M27HELP, M27NAME,

//		M27SPEED, M27SPEEDUNITS, M27DIRECTION, 
//		M27NAMELABEL ,M27SPEEDLABEL,M27DIRECTIONLABEL,M27SETTINGS };

		M27SPEED, M27SPEEDUNITS, M27DIRECTION, M27WINDAGEA, M27WINDAGEB, 
		M27NAMELABEL = 11,M27SPEEDLABEL,M27DIRECTIONLABEL,M27WINDAGELABEL,M27WINDAGETOLABEL,M27WINDAGEPERCENTLABEL };


#define M28 2800

enum { M28OK = 1, M28HILITEDEFAULT, M28CANCEL, M28HELP,

	   M28NAME, M28ACTIVE, M28DIFFUSION, M28UFACTOR, M28FROST1 };

#define M28b 2850	

enum { M28bOK = 1, M28bHILITEDEFAULT, M28bCANCEL, M28bHELP,

	   M28bNAME, M28bACTIVE, M28bDIFFUSION, M28bUFACTOR, M28bFROST1,
		
		M28bDIFFUSIONLABEL1, M28bDIFFUSIONUNITS1=12, M28bUNCERTAINTYLABEL1,
		
		M28bVERTDIFFUSION = 14, M28bVERTUFACTOR, M28bFROST2, 
		
		M28bDIFFUSIONLABEL2, M28bDIFFUSIONUNITS2, M28bUNCERTAINTYLABEL2,
		
		M28bHORIZONTALLABEL=29, M28bVERTICALLABEL=20, M28bINPUTTYPE, 
		
		M28bWINDSPEEDLABEL, M28bWINDSPEED, M28bCURRENTSPEEDLABEL, 
		
		M28bCURRENTSPEED, M28bCURRENTSPEEDUNITS, M28bWINDSPEEDUNITS, M28bFROST3,
		
		M28bDEPTHDEPENDENT=30, M28bBOTKZLABEL, M28bBOTKZ, M28bBOTKZUNITS};

#define M29 2900

enum { M29MESSAGES = 1, M29STOP, M29BAR };


#define M30 3000

//M30ARROWDEPTH
enum { M30OK = 1, M30HILITEDEFAULT, M30CANCEL, M30HELP,

	   M30NAMELABEL, M30NAME, M30ACTIVE, M30SHOWARROWS, M30ARROWSCALE,  M30ARROWUNITS,
	   
	   M30SCALELABEL, M30SCALE, M30ALONGLABEL, M30ALONG, M30ALONGUNITS,
	   
	   M30CROSSLABEL, M30CROSS, M30CROSSUNITS,  M30MINCURRENTLABEL, M30MINCURRENT, M30MINCURRENTUNITS,
	   
	   M30STARTTIMELBEL, M30STARTTIME, M30STARTTIMEUNITS, M30DURATIONLABEL, M30DURATION, M30DURATIONUNITS,
	   
	   M30UNCERTAINTYBOX, M30UNCERTAINTYLABEL, M30ARROWDEPTHAT, M30ARROWDEPTH, M30ARROWDEPTHUNITS,
	   
	   M30BAROMODESINPUT
	   
	   };

#define M31 3100

enum { M31OK = 1, M31HILITEDEFAULT,
	   M31RADIUSSMALL, M31RADIUSMEDIUM, M31RADIUSLARGE, M31FROST, M31FROSTLABEL	   
	   };

#define M32 3200

enum { M32OK = 1, M32HILITEDEFAULT, M32CANCEL, M32HELP,

	   M32FILENAMELABEL, M32FILENAME, M32POSITIONLABEL, M32POSITION,

	   M32UNITSLABEL, M32UNITS,

	   M32INFOTYPEPOPUP = 12, 

	   M32TRANSPORT1LABELA, M32TRANSPORT1 = 14, M32TRANSPORT1UNITS, M32TRANSPORT1LABELB,

	   M32TRANSPORT2LABELA, /*M32TRANSPORT2 = 18, M32TRANSPORT2UNITS,*/ M32TRANSPORT2LABELB, 
		
		M32VELOCITY = 19, M32VELOCITYUNITS

	   };


#define SHIOHTSDLG 3250

enum { SHIOHTSOK = 1, SHIOHTSHILITEDEFAULT, SHIOHTSCANCEL, SHIOHTSHELP,
		
		SHIOHTSSTANDINGWAVE, SHIOHTSPROGRESSIVEWAVE, SHIOHTSSCALEFACTORLABEL, SHIOHTSSCALEFACTOR	

		};

#define M33 3300		// NetCDF dialog

enum { M33OK = 1, M33HILITEDEFAULT, M33CANCEL, M33HELP,

	   M33NAMELABEL, M33NAME, M33ACTIVE, M33SHOWARROWS, M33ARROWSCALE,  M33ARROWUNITS,
	   
	   M33SCALELABEL, M33SCALE, M33ALONGLABEL, M33ALONG, M33ALONGUNITS,
	   
	   M33CROSSLABEL, M33CROSS, M33CROSSUNITS,  M33MINCURRENTLABEL, M33MINCURRENT, M33MINCURRENTUNITS,
	   
	   M33STARTTIMELBEL, M33STARTTIME, M33STARTTIMEUNITS, M33DURATIONLABEL, M33DURATION, M33DURATIONUNITS,
	   
	   M33UNCERTAINTYBOX, M33UNCERTAINTYLABEL, M33TIMEZONEPOPUP = 30, M33TIMESHIFTLABEL, M33TIMESHIFT, M33GMTOFFSETS, 
	   
		M33ARROWDEPTHAT, M33ARROWDEPTH, M33ARROWDEPTHUNITS, M33TIMEZONELABEL, M33EXTRAPOLATECHECKBOX, M33EXTRAPOLATEVERTCHECKBOX,
		
		M33EXTRAPOLATETOLABEL, M33EXTRAPOLATETOVALUE, M33EXTRAPOLATETOUNITSLABEL, M33REPLACEMOVER, M33VELOCITYATBOTTOMCHECKBOX

	   };

#define M34 3400	// TriCurMover dialog - for now it's the same as PtCurMover

enum { M34OK = 1, M34HILITEDEFAULT, M34CANCEL, M34HELP,

	   M34CURNAMELABEL, M34CURFILEPATH, 
	   
	   M34SCALEVELLABEL, M34SCALEVEL, M34SCALEVELUNITS, M34BLLABEL, M34BLTHICKNESS, M34BLUNITS,
	   
	   M34UPPEREDDYLABEL, M34UPPEREDDYVISC, M34UPPEREDDYUNITS,  M34LOWEREDDYLABEL, M34LOWEREDDYVISC, M34LOWEREDDYUNITS,
	   
	   M34UPPERDENSLABEL, M34UPPERDENS, M34UPPERDENSUNITS, M34LOWERDENSLABEL, M34LOWERDENS, M34LOWERDENSUNITS,
	   
		M34SSHNAMELABEL, M34SSHFILEPATH, M34PYCNAMELABEL, M34PYCFILEPATH, M34LLDNAMELABEL, M34LLDFILEPATH, M34ULDNAMELABEL, M34ULDFILEPATH,
		
		M34MODELTYPE
	   
	   };


#define M36 3600


#define M38 3800

#define M38NEW 3850

#define M38b 3801

#define M38bNEW 3851

#define M38c 3802

#define M38cNEW 3852

#define M38d 3803

#define M38dNEW 3853

#define M38e 3804

#define M38eNEW 3854

#define M38g 3805
#define M38gNEW 3855

#define M38h 3806	// select temperature profile for cdog

#define M38i 3807// select salinity profile for cdog

#define M38j 3808// select file in folder of currents for cdog

#define M38h2 3809	// adios budget table...

#define CDOGSPILLDLG 3900

enum { CDOGSPILLOK = 1, CDOGSPILLHILITEDEFAULT, CDOGSPILLCANCEL, /*CDOGSPILLHELP,*/

	   CDOGSPILLNUMLES=5,/* CDOGSPILLGASOILRATIO, CDOGSPILLDRPOPUP,*/ CDOGSPILLDEPTH, CDOGSPILLDEPTHUNITS,

	   CDOGSPILLPOLLUTANT, /*CDOGSPILLDISCHARGERATE, CDOGSPILLDRUNITS=12,*/

	   CDOGSPILLSTARTMONTH, CDOGSPILLSTARTDAY, CDOGSPILLSTARTYEAR, CDOGSPILLSTARTHOURS, CDOGSPILLSTARTMINUTES,

	   CDOGSPILLSLATLABEL, CDOGSPILLSLATDEGREES, CDOGSPILLSLATDEGLABEL, CDOGSPILLSLATDEG,

	   CDOGSPILLSLATMINLABEL, CDOGSPILLSLATMINUTES, CDOGSPILLSLATMIN, CDOGSPILLSLATSECLABEL, CDOGSPILLSLATSECONDS, CDOGSPILLSLATDIR,

	   CDOGSPILLSLONGLABEL, CDOGSPILLSLONGDEGREES, CDOGSPILLSLONGDEGLABEL, CDOGSPILLSLONGDEG,

	   CDOGSPILLSLONGMINLABEL, CDOGSPILLSLONGMINUTES, CDOGSPILLSLONGMIN, CDOGSPILLSLONGSECLABEL, CDOGSPILLSLONGSECONDS, CDOGSPILLSLONGDIR,

	   CDOGSPILLENDMONTH, CDOGSPILLENDDAY, CDOGSPILLENDYEAR, CDOGSPILLENDHOURS, CDOGSPILLENDMINUTES,

	   CDOGSPILLDEGREES, CDOGSPILLDEGMIN, CDOGSPILLDMS,

	   CDOGSPILLFROST1, CDOGSPILLFROST2,
	   
	   CDOGSPILLENDTIMECOLON=45,

	   CDOGSPILLDEPTHLABEL = 50, CDOGSPILLLELABEL = 46, CDOGSPILLMASSLABEL =47, /*CDOGSPILLDRLABEL = 53,*/
	   
	   CDOGSPILLWANTENDTIME = 49, CDOGSPILLENDTIMELABEL = 52, CDOGSPILLWINDAGE,
		
		CDOGSPILLPARAMETERS, CDOGSPILLDIFFUSIVITY, 
		
		//CDOGSPILLDRPOPUPVAL, CDOGSPILLDRPOPUPLABEL, CDOGSPILLOUTPUTOPTIONS, CDOGSPILLGRIDPROFILES=68, CDOGVARDISCHARGE=67
		/*CDOGSPILLDRPOPUPVAL, CDOGSPILLDRPOPUPLABEL,*/ CDOGSPILLOUTPUTOPTIONS, CDOGSPILLNAMELABEL, CDOGSPILLNAME
		
	   };

#define CDOGDIFFUSIVITYDLG 3910

enum { CDOGDIFFOK = 1, CDOGDIFFHILITEDEFAULT, CDOGDIFFCANCEL, CDOGDIFFHELP,

	   CDOGHORIZDIFFLABEL, CDOGHORIZDIFF, CDOGHORIZDIFFUNITS, 
		
	   CDOGVERTDIFFLABEL, CDOGVERTDIFF, CDOGVERTDIFFUNITS, 
		
	   CDOGTIMESTEPINTERVALLABEL, CDOGTIMESTEPINTERVAL, CDOGTIMESTEPINTERVALLABEL2, 

		};

#define TEMPSALDLG 3920

enum { TEMPSALOK = 1, TEMPSALHILITEDEFAULT, TEMPSALCANCEL, TEMPSALHELP,

	   TEMPSALLABEL, TEMPSALFILENAME, TEMPFILENAME, SALFILENAME };

#define CDOGHYDDLG 3930

enum { CDOGHYDOK = 1, CDOGHYDHILITEDEFAULT, CDOGHYDCANCEL, CDOGHYDHELP,

	   CDOGHYDFOLDERLABEL, CDOGHYDFOLDER, CDOGHYDFOLDERNAME 
	   
	   };

#define CDOGCIRCINFODLG 3985

enum { CDOGCIRCINFOOK = 1, CDOGCIRCINFOHILITEDEFAULT, CDOGCIRCINFOCANCEL, CDOGCIRCINFOHELP,

	   CDOGCIRCINFODIFF, CDOGCIRCINFOPROFILES, CDOGCIRCINFOTEMPSAL, CDOGCIRCINFOHYD, 
		
		CDOGCIRCINPUTTYPEPOPUP, CDOGCIRCFIELDSLABEL 
	   
	   };


#define MAPBOX_DLGID 3950
enum { MAPBOX_OK = 1, MAPBOX_HILITE, MAPBOX_CANCEL, MAPBOX_HELP,
	   
		MAPBOXBOUNDS,
		
	   MAPBOXTOPLATLABEL = 6, MAPBOXTOPLATDEGREES, MAPBOXTOPLATDEGLABEL, MAPBOXTOPLATDEG,

	   MAPBOXTOPLATMINLABEL, MAPBOXTOPLATMINUTES, MAPBOXTOPLATMIN, MAPBOXTOPLATSECLABEL, MAPBOXTOPLATSECONDS, MAPBOXTOPLATDIR,

	   MAPBOXLEFTLONGLABEL, MAPBOXLEFTLONGDEGREES, MAPBOXLEFTLONGDEGLABEL, MAPBOXLEFTLONGDEG,

	   MAPBOXLEFTLONGMINLABEL, MAPBOXLEFTLONGMINUTES, MAPBOXLEFTLONGMIN, MAPBOXLEFTLONGSECLABEL, MAPBOXLEFTLONGSECONDS, MAPBOXLEFTLONGDIR,

	   MAPBOXBOTTOMLATLABEL, MAPBOXBOTTOMLATDEGREES, MAPBOXBOTTOMLATDEGLABEL, MAPBOXBOTTOMLATDEG,

	   MAPBOXBOTTOMLATMINLABEL, MAPBOXBOTTOMLATMINUTES, MAPBOXBOTTOMLATMIN, MAPBOXBOTTOMLATSECLABEL, MAPBOXBOTTOMLATSECONDS, MAPBOXBOTTOMLATDIR,

	   MAPBOXRIGHTLONGLABEL, MAPBOXRIGHTLONGDEGREES, MAPBOXRIGHTLONGDEGLABEL, MAPBOXRIGHTLONGDEG,

	   MAPBOXRIGHTLONGMINLABEL, MAPBOXRIGHTLONGMINUTES, MAPBOXRIGHTLONGMIN, MAPBOXRIGHTLONGSECLABEL, MAPBOXRIGHTLONGSECONDS, MAPBOXRIGHTLONGDIR,

	   MAPBOXDEGREES, MAPBOXDEGMIN, MAPBOXDMS, MAPBOX_FROST1 };


#define CDOGOUTPUTOPTIONSDLG 3960

enum { CDOGOUTPUTOPTIONSOK = 1, CDOGOUTPUTOPTIONSHILITEDEFAULT, CDOGOUTPUTOPTIONSCANCEL, CDOGOUTPUTOPTIONSHELP,

	   CDOGOUTPUTOPTIONSLABEL, CDOGOUTPUTSUBSURFACEFILES, CDOGOUTPUTGASFILES 
	   
	   };


#define EDIT_PROFILES_DLGID 3970

#define VAR_DISCHARGE_DLGID 3975

#define ABOUT_CDOG_DLGID 3980

enum { ABOUTCDOGOK = 1, ABOUTCDOGHILITEDEFAULT, ABOUTCDOGCANCEL, ABOUTCDOGTEXT};


#define M40 4000




#define M41 4100	// not used, for putting text boxes on the screen

#ifdef MAC
enum { M41HIDDENOK = 1, M41OK, M41CANCEL, M41TEXT, M41BOXED };
#else
enum { M41HIDDENOK = 1, M41CANCEL = 3, M41TEXT, M41OK, M41BOXED };
#endif



#define M42 4200


#define M50 5000

enum { M50OK = 1, M50HILITEDEFAULT, M50CANCEL, M50HELP,

	   M50NAMELABEL, M50NAME, 
	   
	   M50REFLOATLABEL, M50REFLOATTIME, M50REFLOATLABEL2, 
	   
	   M50REPLACEMAP = 54
	   
	   };

#define M51 5100

enum { M51OK = 1, M51HILITEDEFAULT, M51CANCEL, M51HELP,

	   M51NAMELABEL, M51NAME, 
	   
	   M51REFLOATLABEL, M51REFLOATTIME, M51REFLOATLABEL2,
		
		M51CONTOURLABEL, M51CONTOURDEPTH1, M51CONTOURTO,
		
		M51CONTOURDEPTH2, M51CONTOURUNITS, M51REPLACEMAP, M51SETCONTOURS,
		
		M51WATERDENSITYPOPUP, M51WATERDENSITYLABEL, M51WATERDENSITY,
		
		M51WAVEHTLABEL, M51WAVEHT, M51WAVEHTUNITS,
		
		M51DEPTHLABEL, M51DEPTH, M51DEPTHUNITS, M51DIAGNOSTICSTRTYPE,
		
		M51CONTOURBOTTOM, M51CONTOURBOTTOMLABEL, M51WAVEHTINPUT, M51WAVEHTLABEL2, M51CONTOURBOTTOMRANGE, M51CONTOURBOTTOMUNITS
			   
	   };


enum { CONCTABLE_OK = 1, CONCTABLE_FROST, CONCTABLE_SAVETOFILE, CONCTABLE_USERITEM, CONCTABLE_TIMETITLE, CONCTABLE_AVTITLE, CONCTABLE_MAXTITLE };

enum { OILEDSHORELINETABLE_OK = 1, OILEDSHORELINETABLE_FROST, OILEDSHORELINETABLE_SAVETOFILE, OILEDSHORELINETABLE_USERITEM, OILEDSHORELINETABLE_SEGNOTITLE, 
		OILEDSHORELINETABLE_STARTPTTITLE, OILEDSHORELINETABLE_ENDPTTITLE, OILEDSHORELINETABLE_NUMLESTITLE, OILEDSHORELINETABLE_MILESTITLE, OILEDSHORELINETABLE_GALLONSTITLE, OILEDSHORELINETABLE_GALPERMILETITLE, OILEDSHORELINETABLE_GALPERFOOTTITLE};

enum { BUDGETTABLE_OK = 1, BUDGETTABLE_FROST, BUDGETTABLE_SAVETOFILE, BUDGETTABLE_USERITEM, BUDGETTABLE_TIMETITLE, BUDGETTABLE_RELTITLE, BUDGETTABLE_FLOATTITLE,  
		BUDGETTABLE_EVAPTITLE, BUDGETTABLE_DISPTITLE, BUDGETTABLE_BEACHTITLE, BUDGETTABLE_OFFMAPTITLE, BUDGETTABLE_REMOVEDTITLE};


#define M52 5200

enum { M52OK = 1, M52HILITEDEFAULT, M52CANCEL, M52HELP,

	   M52OUTPUTINTERVALLABEL, M52OUTPUTINTERVAL, M52OUTPUTINTERVALLABEL2, 
	   
	   M52OUTPUTOFFSETLABEL, M52OUTPUTOFFSET, M52OUTPUTOFFSETLABEL2 

	   };

#define ANALYSIS_DLGID 5225
enum { ANALYSIS_OK = 1, ANALYSIS_HILITE, ANALYSIS_CANCEL, ANALYSIS_HELP,

	   ANALYSIS_LABEL, ANALYSIS_REGION,
		
	   ANALYSISTOPLATLABEL, ANALYSISTOPLATDEGREES, ANALYSISTOPLATDEGLABEL, ANALYSISTOPLATDEG,

	   ANALYSISTOPLATMINLABEL, ANALYSISTOPLATMINUTES, ANALYSISTOPLATMIN, ANALYSISTOPLATSECLABEL, ANALYSISTOPLATSECONDS, ANALYSISTOPLATDIR,

	   ANALYSISLEFTLONGLABEL, ANALYSISLEFTLONGDEGREES, ANALYSISLEFTLONGDEGLABEL, ANALYSISLEFTLONGDEG,

	   ANALYSISLEFTLONGMINLABEL, ANALYSISLEFTLONGMINUTES, ANALYSISLEFTLONGMIN, ANALYSISLEFTLONGSECLABEL, ANALYSISLEFTLONGSECONDS, ANALYSISLEFTLONGDIR,

	   ANALYSISBOTTOMLATLABEL, ANALYSISBOTTOMLATDEGREES, ANALYSISBOTTOMLATDEGLABEL, ANALYSISBOTTOMLATDEG,

	   ANALYSISBOTTOMLATMINLABEL, ANALYSISBOTTOMLATMINUTES, ANALYSISBOTTOMLATMIN, ANALYSISBOTTOMLATSECLABEL, ANALYSISBOTTOMLATSECONDS, ANALYSISBOTTOMLATDIR,

	   ANALYSISRIGHTLONGLABEL, ANALYSISRIGHTLONGDEGREES, ANALYSISRIGHTLONGDEGLABEL, ANALYSISRIGHTLONGDEG,

	   ANALYSISRIGHTLONGMINLABEL, ANALYSISRIGHTLONGMINUTES, ANALYSISRIGHTLONGMIN, ANALYSISRIGHTLONGSECLABEL, ANALYSISRIGHTLONGSECONDS, ANALYSISRIGHTLONGDIR,

	   ANALYSISDEGREES, ANALYSISDEGMIN, ANALYSISDMS, ANALYSIS_FROST1,  ANALYSIS_LABEL2, ANALYSIS_LABEL3, ANALYSIS_TRACKREG};


#define ANALYSIS_DLG2 5230	//  

#define PLOTDLG 5250	//  Plot Dialog

enum { PLOTDLG_OK=1, PLOTDLG_HILITE, PLOTDLG_CANCEL, PLOTDLG_HELP, PLOTDLG_PLOTBOX, PLOTDLG_AVCONCPLOTBTN, 

		PLOTDLG_MAXCONCPLOTBTN, PLOTDLG_SHOWPLOTGRIDBTN, PLOTDLG_SHOWTABLE, PLOTDLG_PRINTPLOT, PLOTDLG_SAVEPLOT,
		
		PLOTDLG_DEPTHSLICEPLOTBTN, PLOTDLG_TOXICITY, PLOTDLG_SETAXES, PLOTDLG_COMBOCONCPLOTBTN
		
		};

#define TOXICITY 5275	//  Toxicity OverLay Dialog

enum { TOXICITY_OK=1, TOXICITY_HILITE, TOXICITY_CANCEL, TOXICITY_HELP, TOXICITY_FISH, TOXICITY_CRUSTACEANS, 

		TOXICITY_SENSLIFESTAGE, TOXICITY_TITLE, TOXICITY_LEVELOFCONCERN, TOXICITY_CHECKBOXTYPE,
		
		TOXICITY_ADULTCORAL, TOXICITY_STRESSEDCORAL, TOXICITY_CORALEGGS, TOXICITY_SEAGRASS,
		
		TOXICITY_LOW, TOXICITY_MEDIUM, TOXICITY_HIGH, TOXICITY_SPECIES,
		
		TOXICITY_ENDTIMELABEL, TOXICITY_ENDTIME, TOXICITY_ENDTIMEUNITS,		

		TOXICITY_STARTTIMELABEL, TOXICITY_STARTTIME, TOXICITY_STARTTIMEUNITS		

		};

#define SETAXES 5280	//  Set Axes Limits by Hand

enum { SETAXES_OK=1, SETAXES_HILITE, SETAXES_CANCEL, SETAXES_HELP, 
		
		SETAXES_MINYLABEL, SETAXES_MINY, SETAXES_MINYUNITS,		

		SETAXES_MAXXLABEL, SETAXES_MAXX, SETAXES_MAXXUNITS, SETAXES_CHECKBOX, SETAXES_FROST		

		};

#define M53 5300

enum { M53OK = 1, M53HILITEDEFAULT, M53CANCEL, M53HELP,

	   M53TITLE, M53FROST1, M53TRAJECTORYTIME, M53TRAJECTORYDATE, M53FROST2,

	   M53PREPAREDTIME, M53PREPAREDDATE, M53FROST3,

	   M53FROM, M53FROST4, M53CONTACT, M53FROST5,

	   M53WINDOW, M53PAGE, M53FROST6,

	   M53BANDW, M53GRAYSCALE, M53COLOR, M53FROST7, M53SIZELABEL,

	   M53EDITCAVEAT, M53MODELABEL,
	   
	   M53TRAJECTORYTIMELABEL = 38,
	   M53TRAJECTORYDATELABEL = 39,
	   M53TRAJECTORYDATETIMEFROSTINGLABEL = 43,
	   
	   M53OMITFOOTER = 47
	   
	   };

#define M53C 5301

enum { M53COK = 1, M53CHILITEDEFAULT, M53CCANCEL, M53RESET,

	   M53CLINE1, M53CLINE2, M53CLINE3, M53CLINE4, M53CLINE5 };

#define SMOOTHING 5350

enum { SMOOTHING_OK = 1, SMOOTHING_HILITEDEFAULT, SMOOTHING_CANCEL, SMOOTHING_HELP,

	   SMOOTHING_PERCENTILELABEL, SMOOTHING_PERCENTILE, SMOOTHING_CHECKBOX,
		
		SMOOTHING_MINDISTLABEL, SMOOTHING_MINDIST, SMOOTHING_MINDISTUNITS, LINECROSS_CHECKBOX
	   
	   };


#define CHEM_PARAMS 5375

enum { CHEMPARAMS_OK = 1, CHEMPARAMS_HILITEDEFAULT, CHEMPARAMS_CANCEL, CHEMPARAMS_HELP,

		CHEMPARAMS_DENSITYLABEL, CHEMPARAMS_DENSITY, CHEMPARAMS_DENSITYUNITS,

		CHEMPARAMS_HALFLIFELABEL, CHEMPARAMS_HALFLIFE, CHEMPARAMS_HALFLIFEUNITS };



#define OSPLOTDLG 5380	//  Oiled Shoreline Plot Dialog

enum { OSPLOTDLG_OK=1, OSPLOTDLG_HILITE, OSPLOTDLG_CANCEL, OSPLOTDLG_HELP, OSPLOTDLG_PLOTBOX, OSPLOTDLG_SHORELINEGALSPLOTBTN, 

		OSPLOTDLG_SHORELINEMILESPLOTBTN, OSPLOTDLG_SHOWPLOTGRIDBTN, OSPLOTDLG_SHOWTABLE, OSPLOTDLG_PRINTPLOT, OSPLOTDLG_SAVEPLOT, OSPLOTDLG_SETAXES
		
		};

#define M54 5400

enum { M54OK = 1, M54HILITEDEFAULT, M54CANCEL, M54HELP,

	   M54FORECASTPATH, M54UNCERTAINTYPATH,

	   M54FIRSTHOUR, M54LASTHOUR, M54INCREMENT, M54FRAMECOUNT, M54MATCH };



#define M55 5500

#define M55NEW 5550



#define M58 5800

#define M58NEW 5850



#define M75 7500

#define M76 7600

#define M77C 7700
#define M77Q 7750


#define M79 7900

#define WELCOMEDLG 9920

enum { WELCOME_OK = 1, WELCOME_HILITEDEFAULT, WELCOME_CANCEL, WELCOME_REFERENCES,

		WELCOME_TEXT, WELCOME_TODO, WELCOME_REVISED};



//////////////////// PREFERENCES DIALOG



#define M1 100


#define M1BASE 0

#define M1OK 1

#define M1HILITEDEFAULT 2

#define M1CANCEL 3

#define M1HELP 4

#define M1BOXLEFT 5

#define M1BOXTOP 6

#define M1BOXRIGHT 7

#define M1BOXBOTTOM 8


#define M1TAB1 9
#define M1TAB2 10
#define M1TAB3 11
#define M1TAB4 12
#define M1TAB5 13
//#define M1TABMAX  M1TAB2 // we have a max of 2 tabs right now 
#define M1TABMAX  M1TAB3 // we have a max of 3 tabs right now 


#define M1NUMITEMS 13

// TAB 1
#define M1DISPLAY M1TAB1
// contour display
#define D1DEG (TAB1BASE + 1)
#define D1DEGMIN (TAB1BASE + 2)
#define D1DEGMINSEC (TAB1BASE + 3)
#define D1ABOVE (TAB1BASE + 4)
#define D1BELOW (TAB1BASE + 5)
#define D1SHOWLATLONG (TAB1BASE + 6)
#define D1LABEL1 (TAB1BASE + 7)
#define D1INTERMEDIATELINES (TAB1BASE + 8)
#define D1LABEL2 (TAB1BASE + 9)
#define D1LABEL3 (TAB1BASE + 10)
#define D1LABEL4 (TAB1BASE + 11)
#define D1LABEL5 (TAB1BASE + 12)
#define D1LONGLINE (TAB1BASE + 13)
#define D1LONGLABEL (TAB1BASE + 14)
#define D1LATLINE (TAB1BASE + 15)
#define D1LATLABEL (TAB1BASE + 16)
#define D1LONGLINEUNITSPOPUP (TAB1BASE + 17)
#define D1LONGLABELUNITSPOPUP (TAB1BASE + 18)
#define D1LATLINEUNITSPOPUP (TAB1BASE + 19)
#define D1LATLABELUNITSPOPUP (TAB1BASE + 20)
#define D1CUSTOM (TAB1BASE + 21)
#define D1BOX (TAB1BASE + 22)
#define D1BOX2 (TAB1BASE + 23)
#define D1MACDUMMYTEXT (TAB1BASE + 24)
#define A1NUMITEMS 24

//tab 2
#define M1USERGROUPBOX (TAB2BASE +1)
#define M1USERWIZARD (TAB2BASE +2)
#define M1USERINTERMEDIATE (TAB2BASE +7)
#define M1USERADVANCED (TAB2BASE +3)
#define M1STARTUPGROUPBOX (TAB2BASE +4)
#define M1STARTUPWIZARD (TAB2BASE +5)
#define M1STARTUPINTERMEDIATE (TAB2BASE +8)
#define M1STARTUPADVANCED (TAB2BASE +6)
//#define B1NUMITEMS 8
#define B1NUMITEMS 6

// tab 3
// added daylight savings tab 3.24.06
#define C1NUMITEMS 2
#define C1DSTCHECKBOX (TAB3BASE + 1)
#define C1DSTNOTE (TAB3BASE + 2)

// tab 4
// unused
#define D1NUMITEMS 0

// tab 5
// unused
#define E1NUMITEMS 0

#define TAB1BASE M1BASE + M1NUMITEMS
#define TAB2BASE TAB1BASE + A1NUMITEMS
#define TAB3BASE TAB2BASE + B1NUMITEMS			
#define TAB4BASE TAB3BASE + C1NUMITEMS
#define TAB5BASE TAB4BASE + D1NUMITEMS





////////////////////////////////////////////////////////////////// VARIABLES



extern Boolean makingMovie;

extern char TATFolder[], mssg[], savePath[];
extern char gWorkingDirectory[], gApplicationFolder[];

extern short TATvRefNum;

extern long TATdirID, sixteen, eight, five, four, three, two, one, zero[];

//extern OSErr err;



extern WorldPoint focusPoint;

extern WorldRect previousView, currentView;

extern Settings settings;



extern WindowPtr mapWindow;

extern DialogPtr progressDialog;

extern Handle rainyDayReserve;

extern VList objects;



#ifndef pyGNOME
extern TModel *model;
#else
extern Model_c *model;
#endif



extern RGBColor backColors[];



#ifdef IBM

extern WindowPtr toolWnd, infoWnd, messageWnd;

#endif


// printing and MOSS file globals
extern char sharedTTime[20], sharedTDate[20], sharedPTime[20], sharedPDate[20] ;

////////////////////////////////////////////////////////////////// FUNCTIONS

void			AbbreviateString(CHARPTR s, short maxWidth);

void			AbbreviateDString(DialogPtr dialog, short leftBar, short rightBar, CHARPTR text);

void			ActivateAllMenus(Boolean enable);

OSErr			AddFriends(short vRefNum, long dirID);

OSErr			AddItem();

OSErr			AddLESetDialog();

OSErr 			CreateLESet(WorldPoint *startPoint,WorldPoint *endPoint);

OSErr 			AddMoverToMap(TMap *map, Boolean timeFileChanged, TMover *theMover);

OSErr			AddOMapDialog();

OSErr			AddVectorMapDialog ();

OSErr			AddWeatherDialog();

OSErr			WeathererNameDialog (TWeatherer *thisWeatherer);

void			AddRectToCurrentView(WorldRect wr);

OSErr			AddpPrmResource(short vRefNum, long dirID, char *fileName, WorldRect wr);

char *			AppendUnits(char *s, short u);

OSErr AskUserForUnits(short* selectedUnits,Boolean *userCancel);

OSErr			BitMapAllocateMem(PixMapHandle bits, WindowPtr w);

PixMapHandle	BitMapCreate(Rect bounds, WindowPtr w);

void			BitMapDispose(PixMapHandle bits, WindowPtr w);

void			BringTATForward();

OSErr			ADCPSettingsDialog (ADCPMover *mover, TMap *owner, Boolean *timeFileChanged);

OSErr			CATSSettingsDialog (TCATSMover *mover, TMap *owner, Boolean *timeFileChanged);

TCATSMover 		*CreateAndInitCatsCurrentsMover (TMap *owner, Boolean askForFile, char* givenPath,char* givenFileName);

ADCPMover 		*CreateAndInitADCPCurrentsMover (TMap *owner, Boolean askForFile, char* givenPath,char* givenFileName);

TCurrentMover 	*CreateAndInitCurrentsMover (TMap *owner, Boolean askForFile, char* givenPath,char* givenFileName,TMap **newMap);

TCurrentMover 	*CreateAndInitLocationFileCurrentsMover (TMap *owner, char* givenPath,char* givenFileName,TMap **newMap, char* topFilePath);

OSErr 			ComponentMoverSettingsDialog(TComponentMover *newMover, TMap *owner);

OSErr 			CompoundMoverSettingsDialog(TCompoundMover *newMover, TMap *owner, TMap **newMap);

void			CenterOnFocusPoint();

void			ChangeCurrentView(WorldRect newView, Boolean check, Boolean forceAspect);

OSErr			ChooseImportFile();

short 			ChooseWindMoverDialog(char* classNameOfSelectedGrid); 

Boolean			ClickedPause();

void			ClickWindow(WindowPtr w, EventRecord *event);

void			CloseProgressWindow(WindowPtr parentWindow);

OSErr 			CloseSaveFile(Boolean ask,Boolean quitting);

long			ComputeTextWidth(char *text, short *lineCount);

float			ConvertValue(short format, float mass, float area, float density);

float			ConvertUnits(float n, short oldUnits, short newUnits);

#if TARGET_API_MAC_CARBON
OSStatus 		ConvertTraditionalPathToUnixPath(const char * inPath, char * outPath, int outPathMaxLen); 
OSStatus 		ConvertUnixPathToTraditionalPath(const char * inPath, char * outPath, int outPathMaxLen); 
#endif

OSErr			CopyLLToClipboard();
OSErr			CopyMapViewToClipboard();

OSErr			CopyObjectsToPICT();

Rect			CorrespondingScreenRect(WorldRect wr, Rect r);

short			CountBitsInShort(short s);

long			CurrentScaleDenominator();

OSErr			Cut();

OSErr			DeleteItem();

void			DisplayCurrentTime(Boolean bDrawTriangle);

void			DisplayMessage(char *message);

void			DisplayNumber(long n);

long			DisplayNumToScale(float n, Boolean allowWindowWidth);

void			DoTasks();

OSErr			DownItem();

void			DrawBackColorItem(MenuHandle theMenu, short item, Rect *r, char bPopBox,

								  /*const SysEnvRec *theWorld,*/ const RGBColor *DefaultFore,

								  const RGBColor *DefaultBack);

short			DrawBullet(ListItem item, RECTPTR r, Boolean draw, RECTPTR box);

float 			DrawTimeBarTriangle(short h, Boolean bErasePrevious);

Rect 			TimeLineRect();

void			DrawColorItem(MenuHandle theMenu, short item, Rect *r, char bPopBox,

							  /*const SysEnvRec *theWorld,*/ const RGBColor *DefaultFore,

							  const RGBColor *DefaultBack);

Rect 				DrawingRect(short leftOffset, short rightOffset);

OSErr 			DrawMaps(WindowPtr w, Rect r, WorldRect view, Boolean printing);

void			DrawMarkers(Boolean invalidate);

void			DrawObjectsList(DialogPtr w, RECTPTR r, long n);

void			DrawObjectsList2(WindowRef w, RECTPTR r, long n);

OSErr			DrawPICTFromFile(short vRefNum, long dirID, char *fileName,

								 WindowPtr w, Rect r,

								 Boolean usePICTaspect, RECTPTR frame,

								 Boolean drawFrame, Boolean clipToFrame, Boolean printing);

void			DrawPictureWithCancel(WindowPtr w, PICTUREH hPICT, Rect r);

void			DrawTab(DialogPtr dialog, short itemNum, Boolean focus);

void			DrawTools(short base, short index);

void			DrawToolPalette();

Boolean			EqualListItems(ListItem item1, ListItem item2);

OSErr			Export();

WorldRect		ExtendWRToFitAspect(WorldRect wr, WorldRect aspect);

long			FirstVisibleLEFile();

void			DoublesToWorldPoint(double latVal, double longVal, char dirLat, char dirLong, WorldPoint *p);

Rect 			FullScreenMapWindowRect();

void			FullScreenMapWindow();

//Rect			FullScreenWindowRect();

//void			FullScreenWindow();

void			GetConvertedValueString(short format, float mass, float area, float density, char *s);

void 			GetDateTimeStrings(char *trajectoryTime, char *trajectoryDate, char *preparedTime, char *preparedDate);

char *			GetDensityString(double density, char *s);

char *			GetDepthString(double z, char *s);

void			GetEquality(long scale, char *sLabel, char *sValue, char *sUnits);

OSErr 			GetFilePath(char *path);

char *			GetMassString(double mass, short units, char *s);

void 			GetLeUnitsStr(char* str,short massUnits);

short			GetOldPollutantNumber(char *name);

char *			GetScaleString(char *s, short scaleFormat, long scale);

short			GetStatusCode(char *text);

void			GetStatusText(short code, char *text);

void 			GetStdCaveatLine(char* str , long i);

PicHandle		GetPICTFromFile(short vRefNum, long dirID, char *fileName);

OSErr 			MyWriteResource (OSType thisResType, long thisResID, Handle thisResHdl, short resFRefNum);

void			GetPollutantName(OilType num, char *name);

OilType			GetPollutantNumber(char *name);

OSErr			GetpPrmResource(short vRefNum, long dirID, char *fileName, WorldRect *wr);

char *			GetStatusString(OilStatus	statusCode, char *s);

Boolean			GetTempDrawingRect(Rect *r);

void			GetUnitString(short format, char *s);

void			GetWindowSize(long scale, char *sWidth, char *sHeight, char *sUnits);

OSErr			GreetFriend(char *m, char *sig);

pascal_ifMac OSErr	HandleNOAAEvent(const AppleEvent *ae, AppleEvent *reply, long refCon);

pascal_ifMac OSErr	HandleOAPP(const AppleEvent *ae, AppleEvent *reply, long refCon);

pascal_ifMac OSErr	HandleODOC(const AppleEvent *ae, AppleEvent *reply, long refCon);

pascal_ifMac OSErr	HandlePDOC(const AppleEvent *ae, AppleEvent *reply, long refCon);

pascal_ifMac OSErr	HandleQUIT(const AppleEvent *ae, AppleEvent *reply, long refCon);

void			HiliteObjectsRect(DialogPtr w, RECTPTR r, long n);

WorldRect		HyperBoundsMapsOnScreen();

float			INCMtoUnits(short units);

void			InvalidateScreenImage();

void			InvalidateMapImage();

void			InvalMapDrawingRect();

void			InvalMapWindow();

void			InvalMapWindowBorders();

void			InvalMapWRect(WorldRect wr);

void            InvalToolBarRect(void);

void			InvertColorItem(MenuHandle theMenu, short item, Rect *r, char bOn,

								/*const SysEnvRec *theWorld,*/ const RGBColor *DefaultFore,

								const RGBColor *DefaultBack);

float			LatToDistance(long dLat);

short			LEFileShown(long i);

Boolean			LEFileVisible(long i);

OSErr			LESettingsDialog(ListItem item);

OSErr			OLESettingsDialog(TOLEList *theList);

void			ListClick(Boolean doubleClick);

Rect			ListDrawingRect();

void			MagnifyTool(Point p, short tool);

char *			MakeDistanceString(char *s, float distance, Boolean square);

char *			MakeValueString(char *s, float value);

Rect			MapDrawingRect();

Boolean			MapVisible(long i);

void			MarchBox(Rect antBox, short pNum, Rect insetBox);

void			MarchInsetAnts(GrafPtr port, WorldRect view, short hOffset, short vOffset,

							   Boolean printing, Boolean highResolution, short right);

Rect			MessageRect();

Boolean			MetricUnits(short units);

OSErr			ModelSettingsDialog(Boolean useNextPreviousButtons);

long 			MostZoomedInScale(void);

long 			MostZoomedOutScale(void);

void			MoveFocusPoint(WorldPoint newFocus);

void			MyDrawGrowIcon();

void 			MySpinCursor(void);

void			MyUpdateWindow(WindowPtr updateWindow);

OSErr			NewTATFile();

short			NewToOldPollutantCode(short code);

float			NormalizeValue(short format, float value, float density);

short			OldToNewPollutantCode(short code, Boolean* isEvaporated);

void			OpenProgressWindow(char *title, WindowPtr parentWindow);

OSErr			OpenSaveFile(void);
OSErr 		OpenSaveFileFromPath(char * path, Boolean openingSavFileFromLocFile); 

Boolean		OSSMButtonEnabled(short buttonID);

OSErr			OWeatherSettingsDialog(ListItem item);

OSErr			PageSetUp(Boolean quitting);

OSErr			Paste();

float			PixelConv(short units);

long			PixelDiscrepancy(WorldRect wr);

float 			PixelsPerPoint(void);

short			PollutantFromType(char *pollutantType);

OSErr			PreferencesDialog();

void			PrepareToDraw(Rect r, WorldRect view, short dX, short dY);

OSErr			Print();

Rect			PrintDrawingRect(short reset, RECTPTR pageRect, RECTPTR headerRect, RECTPTR caveatRect, RECTPTR footerRect);

void			printError(char *message);
void			printErrorAlways(char *message);
void 			printSaveFileVersionError(void);//JLM

void			printError2(char *format, long n);

OSErr			PrintMap(void);
Boolean 		PrintMapToPrinter(void);

///////////////////////////////////////////////// Plot functions from DOGS
OSErr 		ConcPlot(Rect *drawrect, long strtpnt, long endpnt, short plottype, short usegrid, Boolean printing, Rect *rGrid, ExRect *plotBnds);
OSErr 		OiledShorelinePlot(Rect *drawrect, long strtpnt, long endpnt, short plottype, short usegrid, Boolean printing, Rect *rGrid, ExRect *plotBnds);
OSErr 		PrintPlot(char *path, Boolean print, Rect r,
					 long startP, long endP, short plotType,
					 Boolean drawGrid, Rect grid, ExRect bounds, Boolean isConcPlot);

OSErr 		SavePlot(char *path, Boolean print, Rect r/*,
					 long startP, long endP, short plotType,
					 Boolean drawGrid, Rect grid, ExRect bounds*/);

void 			DrawPlotPage(GrafPtr port, Rect r,
						long startP, long endP, short plotType,
						Boolean drawGrid, Rect grid, ExRect bounds);
/////////////////////////////////////////////////

void			printNote(char *msg);
void			printNoteAlways(char *msg);

void			printWarning(char *msg);
void			printWarningAlways(char *msg);

void			ProgressMessage(char *message, short num);

void			ProgressMessage2(char *message);

void			ProgressMessage3(char *message);

OSErr			DoQuit();

OSErr			RandomSettingsDialog(TRandom *mover, TMap *owner);
OSErr			Random3DSettingsDialog(TRandom3D *mover, TMap *owner);

OSErr			ReadOSSMLEFile(char *path, LERecH *array, long *numLEs, short *massUnits, Seconds *fileTime);

void 			SwitchLLFormatHelper(DialogPtr dialog, short base, short btnOne, Boolean show);

PicHandle		ReadPNTG(short vRefNum, long dirID, char *fileName);

short			RectLeft(Rect r);

void			RescaleTwoPoints(WorldPoint p1, WorldPoint p2);

void			ResetWindowTitle(char *path);

void			ResizeChildWindows();

WorldPoint 		RoundWorldPoint(WorldPoint wp); // JLM 12/9/98

Rect			SameRectRatio(WorldRect wr1, WorldRect wr2, Rect r1);

OSErr			SaveAs();
OSErr 			AdvancedSaveFileSaveAs(void);
OSErr 			AskUserForSaveFilename(char *previousPath,char *chosenPath,char * defaultExtension, Boolean changeExtension);
OSErr			Save();		// sohail

void			SaveEverything();

OSErr 			SavePICTFile(char *path, short type, Boolean print);

OSErr			SaveSaveFile(char *path);

OSErr			SaveSettings();

long			ScaleDenominator(WorldRect wr, Rect r);

char *			ScaleToDisplayString(long scale, char *s, Boolean allowWindowWidth);

long			ScaleToRectHeight(long scale, WorldRect wr);

long			ScreenToWorldDistance(short pixels);

WorldPoint		ScreenToWorldPoint(Point p, Rect r, WorldRect wr);

WorldPoint		ScreenToWorldPointRound(Point p, Rect r, WorldRect wr);

WORLDPOINTH 	ScreenToWorldPoints(POINTH points, Rect r, WorldRect wr, long dLong, long dLat);

WorldRect		ScreenToWorldRect(Rect r, Rect r2, WorldRect wr);

Rect			ScrollAreaBottom();

Rect			ScrollAreaRight();

Boolean 		SelectedListItem(ListItem *item);

void			SelectListItem(ListItem item);

Boolean 		SelectListItemOfOwner(TClassID *owner);

OSErr			SendBYE(char *sig);

OSErr			SendHOLA(char *sig);

OSErr			SendMHIT(short menuID, short menuItem);

void			SetCurrentScaleDenominator(long scale);

void 			SetTool(long tool);

void			SetPenPat(short pat);

void			SetTempDrawingRect(Rect *r);

OSErr			SettingsItem();

Boolean			ShowModalProgress(short alertID, short n);

void			ShowPercentProgress(short n);

Rect			ShrinkRectToMatchRect(Rect r, Rect rModel);

void			SimplifyLLString(char *s, short precision, char rounder);

void			StartThinLines();
Boolean 		AreUsingThinLines(void);
void			StopThinLines();

void			TechError(char *where, char *what, long n);

void			TextFontCurrent();

void			TextSizeSmall();

Rect TimeTriangleRect(short h);

Rect 			ToolBarRect(void);
WindowPtr 		ToolBarWindow(void);

void			ToolClick(EventRecord *event, short tool);

OSErr			ToolPreferencesDialog();

long			TranslateSharingKey(short key);

void			TypeFromPollutant(short pollutant, char *pollutantType);

OSErr			Undo();

void			UpdateListLength(Boolean autoScroll);
void 			InvalListLength(void);// JLM
void 			ValidateListLength(void);//JLM

void			UpdateMapWindow();

OSErr			UpItem();

OSErr			WindSettingsDialog(TWindMover *mover, TMap *owner,Boolean bAddMover,WindowPtr parentWindow, Boolean savePopupTableInfo);

OSErr 		GetWindFilePath(char *path);

void			WorldPointToDegMin(WorldPoint wp, long *deg1, float *min1,

								   long *deg2, float *min2,

								   char *dirLat, char *dirLong,short numDecimalPlaces);

void			WorldPointToDMS(WorldPoint wp, long *deg1, long *min1, float *sec1,

								long *deg2, long *min2, float *sec2,

								char *dirLat, char *dirLong,short numDecimalPlaces);

void			WorldPointToDoubles(WorldPoint wp, double *latVal, double *longVal,

								   char *dirLat, char *dirLong,short numDecimalPlaces);

void			WorldPointToStrings(WorldPoint wp, char *latString, char *longString);

void			WorldPointToStrings2(WorldPoint wp, char *latString, char *latRound,

													char *longString, char *longRound);

WorldPoint 	RoundWpToNearestSecond(WorldPoint wp);
Point			WorldToScreenPoint(WorldPoint wp, WorldRect wr, Rect r);
Point			WorldToScreenPointRound(WorldPoint wp, WorldRect wr, Rect r);

Rect			WorldToScreenRect(WorldRect wr, WorldRect wr2, Rect r);

void 			ZoomRectAction(Rect *r, Boolean fromCenter);

void LL2EditTexts(DialogPtr dialog, short base, WorldPoint *p);
OSErr EditTexts2LL(DialogPtr dialog, short base, WorldPoint *p,Boolean enforceLimits);
void SwitchLLFormat(DialogPtr dialog, short base, short btnOne);
short ChooseOtherGridDialog(TCATSMover	*connectingCMover,char* classNameOfSelectedGrid); 
void StandardLLClick(DialogPtr dialog, short itemNum, short base, short btnOne, WorldPoint *p,Boolean *changedCoords);

void MyDrawArrow(short x0, short y0, short x1, short y1); //JLM

Boolean operator == (WorldPoint p1, WorldPoint p2);
Boolean operator != (WorldPoint p1, WorldPoint p2);
Boolean operator == (Point p1, Point p2);
Boolean operator != (Point p1, Point p2);

#ifdef IBM
	unsigned short SwapShort(unsigned short n);
	unsigned long SwapLong(unsigned long n);
	
	#define	beachb1CURSOR "#8001"
	#define	beachb2CURSOR "#8002"
	#define	beachb3CURSOR "#8003"
	#define	beachb4CURSOR "#8004"
#endif


#include "CompFunctions.h"

// wizard messages are in the 1's
// model messages are in the 1000's
enum{M_UPDATEVALUES = 1001,M_NEWTOOLSELECTED,M_TOOLDOWN};
 // M_UPDATEVALUES if for things like the SHIO mover, etc that depend on other settings
void TellPlayersAboutNewListSelection(void);
// instead of M_NEWLISTITEMSELECTED we are using M_UPDATEVALUES


enum { NOT_EDITING = 0, EDITTOOLSELECTED, EDITINGSPLOTS};
long EditStatus(void);
Boolean UserIsInEditMode(void);

short SprayCanRadiusInPixels(void);
Boolean CanSpray(Boolean *overWater);
void CommonSetCursor(void);
double FractionOilLeftAtTime(short pollutantType,double timeInHours);

void OSSMEnableMenuItem(MenuHandle m, short item, Boolean enable);
void CDOGTasks(void);
void InitCDOGMenu(void);
Boolean DoCDOGMenu(short menuCodedItemID, Boolean dontDoIt);
Boolean WaitingForCDOG(void);

void InitAnalysisMenu(void);
void DisposeAnalysisMenu(void);

void ResolvePathFromSavedFile(char* pathToResolveFromSaveFile); // JLM 6/3/10

#endif	 // __OSSMH__
